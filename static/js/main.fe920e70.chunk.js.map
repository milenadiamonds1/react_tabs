{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","props","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","className","map","title","classNames","href","onClick","updateTab","content","App","useState","setSelectedTab","current","getTitle","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAwB,SAACC,GACpC,IAAQC,EAAuCD,EAAvCC,KAAMC,EAAiCF,EAAjCE,cAAeC,EAAkBH,EAAlBG,cAQvBC,EAAcH,EAAKI,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOL,MAAkBD,EAAK,GAEzE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAACH,GACT,IAAQC,EAAcD,EAAdC,GAAIG,EAAUJ,EAAVI,MAEZ,OACE,oBAEEF,UAAWG,IAAW,MAAO,CAC3B,YAAaJ,IAAOH,EAAYG,KAElC,UAAQ,MALV,SAOE,mBACEK,KAAI,WAAML,GACV,UAAQ,UACRM,QAAS,kBA1BP,SAACP,GACbA,EAAIC,KAAOL,GACbC,EAAcG,GAwBaQ,CAAUR,IACzBE,UAAU,MAJZ,SAMGE,KAZEH,UAoBf,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAYW,cC5CRd,EAAc,CACzB,CAAEM,GAAI,QAASG,MAAO,QAASK,QAAS,eACxC,CAAER,GAAI,QAASG,MAAO,QAASK,QAAS,eACxC,CAAER,GAAI,QAASG,MAAO,QAASK,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAAShB,EAAK,GAAGM,IAAvD,mBAAOH,EAAP,KAAoBc,EAApB,KAcA,OACE,sBAAKV,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCAVa,WACf,IAAMW,EAAUlB,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOH,KAE5C,OAAOe,EACHA,EAAQT,MACRT,EAAK,GAAGS,MAKgCU,MAE1C,cAAC,EAAD,CACEnB,KAAMA,EACNC,cAAeE,EACfD,cAnBU,SAACG,GACfY,EAAeZ,EAAIC,WCdvBc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.fe920e70.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n};\n\nexport const Tabs: React.FC<Props> = (props) => {\n  const { tabs, selectedTabId, onTabSelected } = props;\n\n  const updateTab = (tab: Tab) => {\n    if (tab.id !== selectedTabId) {\n      onTabSelected(tab);\n    }\n  };\n\n  const selectedTab = tabs.find((tab) => tab.id === selectedTabId) || tabs[0];\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => {\n            const { id, title } = tab;\n\n            return (\n              <li\n                key={id}\n                className={classNames('tab', {\n                  'is-active': id === selectedTab.id,\n                })}\n                data-cy=\"Tab\"\n              >\n                <a\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => updateTab(tab)}\n                  className=\"btn\"\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0].id);\n\n  const onClick = (tab: Tab) => {\n    setSelectedTab(tab.id);\n  };\n\n  const getTitle = () => {\n    const current = tabs.find(tab => tab.id === selectedTab);\n\n    return current\n      ? current.title\n      : tabs[0].title;\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">{`Selected tab is ${getTitle()}`}</h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab}\n        onTabSelected={onClick}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}